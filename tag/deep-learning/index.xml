<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning | Raghav Prabhakar</title>
    <link>https://Raghav1503.github.io/tag/deep-learning/</link>
      <atom:link href="https://Raghav1503.github.io/tag/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    <description>Deep Learning</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Raghav Prabhakar</copyright><lastBuildDate>Sat, 27 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://Raghav1503.github.io/images/logo_hufb929c38413fdd7aa7f40512b65ddbb9_6068_300x300_fit_lanczos_2.png</url>
      <title>Deep Learning</title>
      <link>https://Raghav1503.github.io/tag/deep-learning/</link>
    </image>
    
    <item>
      <title>Behavariol Cloning for Self-Driving Car</title>
      <link>https://Raghav1503.github.io/project/behavariol/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://Raghav1503.github.io/project/behavariol/</guid>
      <description>&lt;p&gt;Created and trained several different deep learning models for behavioral cloning for self driving cars.&lt;/p&gt;
&lt;p&gt;Other Creators :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mankaran Singh&lt;/li&gt;
&lt;li&gt;Chirag Goel&lt;/li&gt;
&lt;li&gt;Mandeep&lt;/li&gt;
&lt;li&gt;Shubhank Saxena&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;More info and demo video Coming Soon.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>U-Net for Bio-Medical Imaging</title>
      <link>https://Raghav1503.github.io/project/u-net/</link>
      <pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://Raghav1503.github.io/project/u-net/</guid>
      <description>&lt;p&gt;This project is the implementation of paper U-Net: Convolutional Networks for Biomedical Image Segmentation written by Olaf Ronneberger, Philipp Fischer, Thomas Brox.&lt;/p&gt;
&lt;p&gt;Introduction&lt;/p&gt;
&lt;p&gt;Spot Nuclei. Speed Cures.&lt;/p&gt;
&lt;p&gt;Imagine speeding up research for almost every disease, from lung cancer and heart disease to rare disorders. The 2018 Data Science Bowl offers our most ambitious mission yet: create an algorithm to automate nucleus detection.&lt;/p&gt;
&lt;p&gt;We’ve all seen people suffer from diseases like cancer, heart disease, chronic obstructive pulmonary disease, Alzheimer’s, and diabetes. Many have seen their loved ones pass away. Think how many lives would be transformed if cures came faster.&lt;/p&gt;
&lt;p&gt;By automating nucleus detection, we could help unlock cures faster—from rare disorders to the common cold.&lt;/p&gt;
&lt;p&gt;I know I am little late to the party but learning has no deadline or time limit.&lt;/p&gt;












  


&lt;video controls &gt;
  &lt;source src=&#34;my_video.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
</description>
    </item>
    
    <item>
      <title>Face Detection with Haar-Like Cascades</title>
      <link>https://Raghav1503.github.io/project/face/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://Raghav1503.github.io/project/face/</guid>
      <description>&lt;p&gt;Face Detection based a Viola-Jones Paper and Haar-Like Cascades. This program can detect faces, eyes and smile :) satisfactorily. This is a classical approach to Computer Vision.&lt;/p&gt;
&lt;p&gt;To Do :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Write a decent blog-article for this program&lt;/li&gt;
&lt;li&gt;Make a Web-App to demonstrate&lt;/li&gt;
&lt;li&gt;Refactor Code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Though I have plans to try latest Deep Learning methods such as MTCNN for face detection and Google Facenet for recognition combined with liveness detector etc.&lt;/p&gt;
&lt;p&gt;So Stay Tuned Up.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Automatic Street Lighting System Using LDR</title>
      <link>https://Raghav1503.github.io/project/arduino/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://Raghav1503.github.io/project/arduino/</guid>
      <description>&lt;p&gt;OBJECTIVE&lt;/p&gt;
&lt;p&gt;The traditional lighting system has been limited to two options ON and OFF only, and it is not efficient because this kind of operations meant power loss due to continuing working on maximum voltage. Hence, wastage of power from street lights is one of the noticeable power loss, but with the use of automation, it leads to many new methods of energy and money saving. In this regard, controlling lighting system using Light Dependent Resistor (LDR).&lt;/p&gt;
&lt;p&gt;The most natural solution is to control the street lights according to the outside lighting condition. This is we are aiming for in smart lighting system in which the street lights will be turned OFF during day-time, otherwise the lights will be remained Dim/ON. Our proposed design is aimed at efficiently replacing any light systems that are manually controlled, and this is accomplished with the proper arrangements of microcontroller Arduino Uno, LDR, and Resistors. In this scenario, when the intensity of sunlight impinges with LDR, street lights can be further controlled as per the desired requirements, automatically.&lt;/p&gt;
&lt;p&gt;WORKING&lt;/p&gt;
&lt;p&gt;Firstly, LDR will sense the intensity value of sunlight and send it to Arduino. Arduino will judge if the received value is above the threshold level (which is set independently by the user from the discrete value: 0-2023), then it will consider it as daytime and LEDs will remain OFF, or if the received value below the threshold level, Arduino will consider it as a night-time.&lt;/p&gt;
&lt;p&gt;COMPONENTS :&lt;/p&gt;
&lt;p&gt;A. Light Dependent Resistor (LDR)&lt;/p&gt;
&lt;p&gt;LDR is a Light Dependent Resistor whose resistance is dependent on the light impinging on it. The resistance offered by the sensor decreases with the increase in light strength and increases with the decrease in light strength. This device is used for detection of day-time and night-time because when sunlight falls on it, it will consider as day-time, and when there is no sunlight falls on it, it will be regarded as a night, as shown in Fig. 2b. These are very beneficial, especially in light/dark sensor circuits and help in automatically switching ON /OFF the street lights.&lt;/p&gt;
&lt;p&gt;B. Arduino Uno&lt;/p&gt;
&lt;p&gt;The Arduino Uno is a microcontroller board which is based on the ATmega328 series controllers and has an IDE (Integrated Development Environment) for writing, compiling and uploading codes to the microcontroller. It has 14 digital input and output pins (of which 6 are PWM) and 6 analogue inputs for communication with the electronic components such as sensors, switches, motors and so on. It also has 16 MHz ceramic resonators, a USB connection jack, an external power supply jack, an ICSP (in-circuit serial programmer) header, and a reset button. Its operating voltage is 5v, input voltage 7 to 12v (limit up to 20v).&lt;/p&gt;
&lt;p&gt;C. LEDs&lt;/p&gt;
&lt;p&gt;An LED (light-emitting diode) is a PN junction diode which is used for emitting visible light when it is activated. When the voltage is applied over its elements, electrons regroup with holes within the LED, releasing energy in the form of photons which gives the visible light.&lt;/p&gt;
&lt;p&gt;D. Resistors&lt;/p&gt;
&lt;p&gt;A resistor is a passive electronic component, used with other electronic components such as LEDs and sensors to prevent or limit the flow of electrons through them as illustrated in Fig. 6. It works on the principle of Ohm’s law which prevent overflow of voltage.&lt;/p&gt;
&lt;p&gt;For this very simple DIY Arduino project we need: A breadboard An arduino (whatever is handy) LED (Light Emitting Diode) LDR (Photoresistor) A 10K Resistor for creating the voltage divider and a 220ohm resistor for the LED Few breadboard friendly connecting wires and a USB cable to upload the code to the Arduino&lt;/p&gt;
&lt;p&gt;ASSEMBLY&lt;/p&gt;
&lt;p&gt;Connect the 3.3v output of the Arduino to the positive rail of the breadboard
Connect the ground to the negative rail of the breadboard
Place the LDR on the breadboard
Attach the 10K resistor to one of the legs of the LDR
Connect the A0 pin of the Arduino to the same column where the LDR and resistor is connected (Since the LDR gives out an analog voltage, it is connected to the analog input pin on the Arduino. Arduino, with its built-in ADC (Analog to Digital Converter), then converts the analog voltage from 0-5V into a digital value in the range of 0-1023). - Now connect the other end of the 10K resistor to the negative rail - And the second (free) leg of the LDR to the positive rail
Place the LED on the breadboard
Connect the 220ohm resistor to the long leg (positive) of the LED
Then we will connect the other leg of the resistor to pin number 13 (digital pin) of the Arduino and the shorter leg of the LED to the negative rail of the breadboard.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
